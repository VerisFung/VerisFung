<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小明的笔记</title>
  <subtitle>天道酬勤</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://note.mostclan.com/"/>
  <updated>2017-08-02T15:20:22.456Z</updated>
  <id>http://note.mostclan.com/</id>
  
  <author>
    <name>Veris</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【cURL】实例一、上传文件</title>
    <link href="http://note.mostclan.com/2017/08/02/%E3%80%90cURL%E3%80%91%E5%AE%9E%E4%BE%8B%E4%B8%80%E3%80%81%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
    <id>http://note.mostclan.com/2017/08/02/【cURL】实例一、上传文件/</id>
    <published>2017-08-02T15:17:50.000Z</published>
    <updated>2017-08-02T15:20:22.456Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    <span class="comment">/* http://localhost/upload.php:</span></div><div class="line"><span class="comment">    print_r($_POST);</span></div><div class="line"><span class="comment">    print_r($_FILES);</span></div><div class="line"><span class="comment">    */</span></div><div class="line">    </div><div class="line">    $ch = curl_init();</div><div class="line">    </div><div class="line">    $data = <span class="keyword">array</span>(<span class="string">'name'</span> =&gt; <span class="string">'Foo'</span>, <span class="string">'file'</span> =&gt; <span class="string">'@/home/user/test.png'</span>);</div><div class="line">    </div><div class="line">    curl_setopt($ch, CURLOPT_URL, <span class="string">'http://localhost/upload.php'</span>);</div><div class="line">    curl_setopt($ch, CURLOPT_POST, <span class="number">1</span>);</div><div class="line">    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);</div><div class="line">    curl_exec($ch);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>以上实例输出结果如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Array</span></div><div class="line">(</div><div class="line">    [name] =&gt; Foo</div><div class="line">)</div><div class="line"><span class="keyword">Array</span></div><div class="line">(</div><div class="line">    [file] =&gt; <span class="keyword">Array</span></div><div class="line">    (</div><div class="line">        [name] =&gt; test.png</div><div class="line">        [type] =&gt; image/png</div><div class="line">        [tmp_name] =&gt; /tmp/phpcpjNeQ</div><div class="line">        [error] =&gt; <span class="number">0</span></div><div class="line">        [size] =&gt; <span class="number">279</span></div><div class="line">    )</div><div class="line">)</div></pre></td></tr></table></figure>
<blockquote>
<p>传递一个数组到<code>CURLOPT_POSTFIELDS</code>，cURL会把数据编码成<code>multipart/form-data</code>，而然传递一个<code>URL-encoded</code>字符串时，数据会被编码成<code>application/x-www-form-urlencoded</code>。<br>在HTML中，<code>form</code>标签的<code>enctype</code>属性规定在发送到服务器之前应该如何对表单数据进行编码。默认地，表单数据会编码为 “application/x-www-form-urlencoded”。就是说，在发送到服务器之前，所有字符都会进行编码（空格转换为 “+” 加号，特殊符号转换为 ASCII HEX 值）。</p>
</blockquote>
<p><code>multipart/form-data</code>与<code>application/x-www-form-urlencoded</code>的区别：</p>
<table>
<thead>
<tr>
<th>Value</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>application/x-www-form-urlencoded</td>
<td>在发送前编码所有字符（默认）</td>
</tr>
<tr>
<td>multipart/form-data</td>
<td>不对字符编码。在使用包含文件上传控件的表单时，必须使用该值。</td>
</tr>
<tr>
<td>text/plain</td>
<td>值中空格转换为 “+” 加号，但不对特殊字符编码。</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://note.mostclan.com/categories/PHP/"/>
    
    
      <category term="cURL" scheme="http://note.mostclan.com/tags/cURL/"/>
    
  </entry>
  
  <entry>
    <title>【cURL】CURLOPT_RETURNTRANSFER选项使用实验详解</title>
    <link href="http://note.mostclan.com/2017/08/02/%E3%80%90cURL%E3%80%91CURLOPT-RETURNTRANSFER%E9%80%89%E9%A1%B9%E4%BD%BF%E7%94%A8%E5%AE%9E%E9%AA%8C%E8%AF%A6%E8%A7%A3/"/>
    <id>http://note.mostclan.com/2017/08/02/【cURL】CURLOPT-RETURNTRANSFER选项使用实验详解/</id>
    <published>2017-08-02T15:17:31.000Z</published>
    <updated>2017-08-02T15:20:17.258Z</updated>
    
    <content type="html"><![CDATA[<p><code>curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);</code></p>
<p>参数值：</p>
<ul>
<li>false： 关闭返回，直接输出内容</li>
<li>true： 开启返回，不直接输出内容</li>
</ul>
<blockquote>
<p>开启后使用<code>curl_exec</code>函数或<code>curl_multi_getcontent</code>函数返回网站内容，两个函数的返回区别如下：</p>
</blockquote>
<ul>
<li><strong>使用</strong><code>curl_exec</code><strong>函数</strong>  <figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    $ch=curl_init();</div><div class="line">    curl_setopt($ch,CURLOPT_URL,<span class="string">'http://www.mostclan.com/'</span>);</div><div class="line">    curl_setopt($ch,CURLOPT_HEADER,<span class="number">0</span>);</div><div class="line">    $a=curl_exec($ch);</div><div class="line">    curl_close($ch);</div><div class="line">    var_dump($a);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<pre><code>执行结果：
* 直接输出了网页内容
* curl_exec函数返回`boolean true`
</code></pre><ul>
<li><p><strong>使用</strong><code>curl_multi_getcontent</code><strong>函数</strong></p>
  <figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    $ch=curl_init();</div><div class="line">    curl_setopt($ch,CURLOPT_URL,<span class="string">'http://www.mostclan.com/'</span>);</div><div class="line">    curl_setopt($ch,CURLOPT_HEADER,<span class="number">0</span>);</div><div class="line">    curl_setopt($ch,CURLOPT_RETURNTRANSFER,<span class="number">1</span>);</div><div class="line">    $a=curl_exec($ch);</div><div class="line">    $b=curl_multi_getcontent($ch);</div><div class="line">    curl_close($ch);</div><div class="line">    var_dump($a);</div><div class="line">    var_dump($b);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<pre><code>* 设置`CURLOPT_RETURNTRANSFER`为`true`结果：

<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">string '<span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>最族 - 关注互联网技术的网络工作室<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"最族,最族网络,最族游戏,最族软件,最族工作室,最族网络工作室,最族天下,最族传媒,最族科技,游戏制作,独立游戏开发,Mostclan,Veris,Game'... (length=59109)</span></span></div></pre></td></tr></table></figure>


<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">string '<span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>最族 - 关注互联网技术的网络工作室<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"最族,最族网络,最族游戏,最族软件,最族工作室,最族网络工作室,最族天下,最族传媒,最族科技,游戏制作,独立游戏开发,Mostclan,Veris,Game'... (length=59109)</span></span></div></pre></td></tr></table></figure>


返回了两个网页源代码

* 设置`CURLOPT_RETURNTRANSFER`为`false`结果：

    * $a 返回 boolean true 并直接输出网页内容
    * $b 返回 null
</code></pre><blockquote>
<p>总结：<code>CURLOPT_RETURNTRANSFER</code>值为<code>true</code>时则会终止<code>curl_exec</code>直接输出内容，且将内容已函数返回值的形式返回，可用<code>curl_exec</code>或<code>curl_multi_getcontent</code>获取返回值；不同的是当<code>CURLOPT_RETURNTRANSFER</code>值为<code>false</code>时，<code>curl_exec</code>值为<code>布尔值</code>，<code>curl_multi_getcontent</code>为<code>字符串</code>或<code>null</code>值。</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:left">CURLOPT_RETURNTRANSFER</th>
<th style="text-align:left">curl_exec()</th>
<th style="text-align:left">curl_multi_getcontent()</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">true 或 1</td>
<td style="text-align:left">终止输出页面内容，返回获取的文本流，无内容返回空串，若curl执行失败则返回false</td>
<td style="text-align:left">返回获取的文本流，无内容返回null</td>
</tr>
<tr>
<td style="text-align:left">false 或 0</td>
<td style="text-align:left">输出页面内容，返回cURL状态</td>
<td style="text-align:left">返回null</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参数值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;false： 关闭返回，直接输出内容&lt;/li&gt;
&lt;li&gt;true： 开启返回，不直接输出内容&lt;/li&gt;
&lt;/ul
    
    </summary>
    
      <category term="PHP" scheme="http://note.mostclan.com/categories/PHP/"/>
    
    
      <category term="cURL" scheme="http://note.mostclan.com/tags/cURL/"/>
    
  </entry>
  
  <entry>
    <title>【cURL】cURL获取一个网页内容</title>
    <link href="http://note.mostclan.com/2017/08/02/%E3%80%90cURL%E3%80%91%E8%8E%B7%E5%8F%96%E4%B8%80%E4%B8%AA%E7%BD%91%E9%A1%B5%E5%86%85%E5%AE%B9/"/>
    <id>http://note.mostclan.com/2017/08/02/【cURL】获取一个网页内容/</id>
    <published>2017-08-02T15:16:53.000Z</published>
    <updated>2017-08-02T15:20:19.755Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">    <span class="meta">&lt;?php</span></div><div class="line">    <span class="comment">// 创建一个cURL资源</span></div><div class="line">    $ch = curl_init();</div><div class="line">    </div><div class="line">    <span class="comment">// 设置URL和相应的选项</span></div><div class="line">    curl_setopt($ch, CURLOPT_URL, <span class="string">"http://www.mostclan.com/"</span>);</div><div class="line">    curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</div><div class="line">    </div><div class="line">    <span class="comment">// 抓取URL并把它传递给浏览器</span></div><div class="line">    curl_exec($ch);</div><div class="line">    </div><div class="line">    <span class="comment">// 关闭cURL资源，并且释放系统资源</span></div><div class="line">    curl_close($ch);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>如果<code>CURLOPT_RETURNTRANSFER</code>选项被设置，函数执行成功时会返回执行的结果，失败时返回<code>FALSE</code>。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://note.mostclan.com/categories/PHP/"/>
    
    
      <category term="cURL" scheme="http://note.mostclan.com/tags/cURL/"/>
    
  </entry>
  
  <entry>
    <title>搭建LNMP环境</title>
    <link href="http://note.mostclan.com/2017/08/02/%E6%90%AD%E5%BB%BALNMP%E7%8E%AF%E5%A2%83/"/>
    <id>http://note.mostclan.com/2017/08/02/搭建LNMP环境/</id>
    <published>2017-08-02T15:10:27.000Z</published>
    <updated>2017-08-02T15:11:19.483Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>任务时间：5min ~ 10min</p>
</blockquote>
<h3 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h3><p>使用<code>yum</code>安装 Nginx：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install nginx -y</div></pre></td></tr></table></figure>
<p>修改<em>/etc/nginx/conf.d/default.conf</em>，去除对 IPv6 地址的监听，可参考下面的代码示例：</p>
<h5 id="示例代码：-etc-nginx-conf-d-default-conf"><a href="#示例代码：-etc-nginx-conf-d-default-conf" class="headerlink" title="示例代码：/etc/nginx/conf.d/default.conf"></a>示例代码：/etc/nginx/conf.d/default.conf</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80 default_server;</div><div class="line">    # listen       [::]:80 default_server;</div><div class="line">    server_name  _;</div><div class="line">    root         /usr/share/nginx/html;</div><div class="line"></div><div class="line">    # Load configuration files for the default server block.</div><div class="line">    include /etc/nginx/default.d/*.conf;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    error_page 404 /404.html;</div><div class="line">        location = /40x.html &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    error_page 500 502 503 504 /50x.html;</div><div class="line">        location = /50x.html &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>修改完成后，启动 Nginx：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx</div></pre></td></tr></table></figure>
<p>此时，可访问实验机器外网 HTTP 服务（<a href="http://xn--%3C%20cvm%20ip%20-sd04ayi737nv69f/" target="_blank" rel="external">http://&lt;您的 CVM IP 地址&gt;</a>）来确认是否已经安装成功。</p>
<p>将 Nginx 设置为开机自动启动：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig nginx on</div></pre></td></tr></table></figure>
<blockquote>
<p>CentOS 6 不支持 IPv6，需要取消对 IPv6 地址的监听，否则 Nginx 不能成功启动。</p>
</blockquote>
<h2 id="安装-MySQL-数据库服务"><a href="#安装-MySQL-数据库服务" class="headerlink" title="安装 MySQL 数据库服务"></a>安装 MySQL 数据库服务</h2><blockquote>
<p>任务时间：5min ~ 10min</p>
</blockquote>
<h3 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h3><p>使用<code>yum</code>安装 MySQL：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install mysql-server -y</div></pre></td></tr></table></figure>
<p>安装完成后，启动 MySQL 服务：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld restart</div></pre></td></tr></table></figure>
<p>设置 MySQL 账户 root 密码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/mysqladmin -u root password &apos;Password&apos;</div></pre></td></tr></table></figure>
<p>将 MySQL 设置为开机自动启动：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig mysqld on</div></pre></td></tr></table></figure>
<blockquote>
<p>下面命令中的密码是教程为您自动生成的，为了方便实验的进行，不建议使用其它密码。如果设置其它密码，请把密码记住，在后续的步骤会使用到。</p>
</blockquote>
<h2 id="搭建-PHP-环境"><a href="#搭建-PHP-环境" class="headerlink" title="搭建 PHP 环境"></a>搭建 PHP 环境</h2><blockquote>
<p>任务时间：5min ~ 10min</p>
</blockquote>
<h3 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h3><p>使用<code>yum</code>安装 PHP：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install php php-fpm php-mysql -y</div></pre></td></tr></table></figure>
<p>安装之后，启动 PHP-FPM 进程：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service php-fpm start</div></pre></td></tr></table></figure>
<p>启动之后，可以使用下面的命令查看 PHP-FPM 进程监听哪个端口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -nlpt | grep php-fpm</div></pre></td></tr></table></figure>
<p>把 PHP-FPM 也设置成开机自动启动：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig php-fpm on</div></pre></td></tr></table></figure>
<blockquote>
<p>CentOS 6 默认已经安装了 PHP-FPM 及 PHP-MYSQL，下面命令执行的可能会提示已经安装。</p>
<p>PHP-FPM 默认监听 9000 端口</p>
</blockquote>
<h2 id="配置-Nginx-并运行-PHP-程序"><a href="#配置-Nginx-并运行-PHP-程序" class="headerlink" title="配置 Nginx 并运行 PHP 程序"></a>配置 Nginx 并运行 PHP 程序</h2><blockquote>
<p>任务时间：5min ~ 10min</p>
</blockquote>
<h3 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h3><p>在<em>/etc/nginx/conf.d</em>目录中新建一个名为 php.conf 的文件，并配置 Nginx 端口 ，配置示例如下：</p>
<h5 id="示例代码：-etc-nginx-conf-d-php-conf"><a href="#示例代码：-etc-nginx-conf-d-php-conf" class="headerlink" title="示例代码：/etc/nginx/conf.d/php.conf"></a>示例代码：/etc/nginx/conf.d/php.conf</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 8000;</div><div class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class="line">    location ~ .php$ &#123;</div><div class="line">        root           /usr/share/php;</div><div class="line">        fastcgi_pass   127.0.0.1:9000;</div><div class="line">        fastcgi_index  index.php;</div><div class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</div><div class="line">        include        fastcgi_params;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>修改配置完成后，重启 nginx 服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service nginx restart</div></pre></td></tr></table></figure>
<p>这时候，我们就可以在<em>/usr/share/php</em>目录下新建一个 info.php 文件来检查 php 是否安装成功了，文件内容参考如下：</p>
<h5 id="示例代码：-usr-share-php-info-php"><a href="#示例代码：-usr-share-php-info-php" class="headerlink" title="示例代码：/usr/share/php/info.php"></a>示例代码：/usr/share/php/info.php</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;?php phpinfo(); ?&gt;</div></pre></td></tr></table></figure>
<p>此时，访问<a href="http://xn--%3C%20cvm%20ip%20%3E-yp49ackh32qjw5g:8000/info.php" target="_blank" rel="external">http://&lt;您的 CVM IP 地址&gt;:8000/info.php</a>可浏览到我们刚刚创建的 info.php 页面了</p>
<h3 id="完成实验"><a href="#完成实验" class="headerlink" title="完成实验"></a>完成实验</h3><p>恭喜！您已经成功完成了搭建 LNMP 服务器的实验任务。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;任务时间：5min ~ 10min&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;安装-Nginx&quot;&gt;&lt;a href=&quot;#安装-Nginx&quot; class=&quot;headerlink&quot; title=&quot;安装 Nginx&quot;&gt;&lt;/a&gt;安装 Nginx&lt;/
    
    </summary>
    
      <category term="Linux" scheme="http://note.mostclan.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>搭建LAMP环境</title>
    <link href="http://note.mostclan.com/2017/08/02/%E6%90%AD%E5%BB%BALAMP%E7%8E%AF%E5%A2%83/"/>
    <id>http://note.mostclan.com/2017/08/02/搭建LAMP环境/</id>
    <published>2017-08-02T15:07:47.000Z</published>
    <updated>2017-08-02T15:10:03.009Z</updated>
    
    <content type="html"><![CDATA[<p>任务时间：5min ~ 10min</p>
<h3 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h3><p>使用<code>yum</code>安装 MySQL：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install mysql-server -y</div></pre></td></tr></table></figure>
<p>安装完成后，启动 MySQL 服务：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld restart</div></pre></td></tr></table></figure>
<p>设置 MySQL 账户 root 密码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/mysqladmin -u root password &apos;Password&apos;</div></pre></td></tr></table></figure>
<blockquote>
<p>下面命令中的密码是教程为您自动生成的，为了方便实验的进行，不建议使用其它密码。如果设置其它密码，请把密码记住。</p>
</blockquote>
<h2 id="安装-Apache-服务"><a href="#安装-Apache-服务" class="headerlink" title="安装 Apache 服务"></a>安装 Apache 服务</h2><blockquote>
<p>任务时间：5min ~ 10min</p>
</blockquote>
<h3 id="安装-Apache"><a href="#安装-Apache" class="headerlink" title="安装 Apache"></a>安装 Apache</h3><p>使用<code>yum</code>安装 Apache</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install httpd -y</div></pre></td></tr></table></figure>
<p>启动 Apache 服务：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service httpd start</div></pre></td></tr></table></figure>
<h2 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h2><blockquote>
<p>任务时间：5min ~ 10min</p>
</blockquote>
<h3 id="安装-PHP-和-PHP-MYSQL-支持工具："><a href="#安装-PHP-和-PHP-MYSQL-支持工具：" class="headerlink" title="安装 PHP 和 PHP-MYSQL 支持工具："></a>安装 PHP 和 PHP-MYSQL 支持工具：</h3><p>使用<code>yum</code>安装 PHP：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install php php-mysql -y</div></pre></td></tr></table></figure>
<blockquote>
<p>CentOS 6 默认已经安装了 php-mysql，下面命令执行的可能会提示已经安装。</p>
</blockquote>
<h2 id="检查安装是否成功"><a href="#检查安装是否成功" class="headerlink" title="检查安装是否成功"></a>检查安装是否成功</h2><blockquote>
<p>任务时间：5min ~ 10min</p>
</blockquote>
<h3 id="检验-PHP-是否安装成功"><a href="#检验-PHP-是否安装成功" class="headerlink" title="检验 PHP 是否安装成功"></a>检验 PHP 是否安装成功</h3><p>我们在<em>/var/www/html</em>目录下创建一个info.php文件来检查php是否安装成功，示例代码参考如下</p>
<h5 id="示例代码：-var-www-html-info-php"><a href="#示例代码：-var-www-html-info-php" class="headerlink" title="示例代码：/var/www/html/info.php"></a>示例代码：/var/www/html/info.php</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;?php phpinfo(); ?&gt;</div></pre></td></tr></table></figure>
<p>重启 Apache 服务：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service httpd restart</div></pre></td></tr></table></figure>
<p>此时，访问<a href="http://xn--%3C%20cvm%20ip%20%3E-yp49ackh32qjw5g/info.php" target="_blank" rel="external">http://&lt;您的 CVM IP 地址&gt;/info.php</a>可浏览到我们刚刚创建的 info.php 页面了</p>
<h3 id="完成实验"><a href="#完成实验" class="headerlink" title="完成实验"></a>完成实验</h3><p>恭喜！您已经成功完成了搭建 LAMP 服务器的实验任务。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;任务时间：5min ~ 10min&lt;/p&gt;
&lt;h3 id=&quot;安装-MySQL&quot;&gt;&lt;a href=&quot;#安装-MySQL&quot; class=&quot;headerlink&quot; title=&quot;安装 MySQL&quot;&gt;&lt;/a&gt;安装 MySQL&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;yum&lt;/code&gt;安装 
    
    </summary>
    
      <category term="Linux" scheme="http://note.mostclan.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>CentOS 6.3安装</title>
    <link href="http://note.mostclan.com/2017/08/02/CentOS-6-3%E5%AE%89%E8%A3%85/"/>
    <id>http://note.mostclan.com/2017/08/02/CentOS-6-3安装/</id>
    <published>2017-08-02T15:05:22.000Z</published>
    <updated>2017-08-02T15:06:05.506Z</updated>
    
    <content type="html"><![CDATA[<p>附：<a href="http://www.centoscn.com/CentosSoft/iso/2013/0720/370.html" target="_blank" rel="external">CentOS 6.3下载地址</a></p>
<blockquote>
<p>安装注意事项：</p>
</blockquote>
<ol>
<li>CentOS 6.3系统镜像有两个，安装系统只用到第一个镜像即<strong>CentOS-6.3-i386-bin-DVD1.iso（32位）</strong>或者<strong>CentOS-6.3-x86_64-bin-DVD1.iso（64位）</strong>,第二个镜像是系统自带软件安装包</li>
<li>安装CentOS 6.3系统的计算机<strong>内存必须等于或者大于628M（最小内存628M）</strong>，才能启用图形安装模式</li>
<li>CentOS 6.3文本安装模式不支持自定义分区，建议使用图形安装模式安装</li>
<li>CentOS 6.3的系统安装方式分为：<strong>图形安装模式</strong>和<strong>文本安装模式</strong> </li>
<li>CentOS 6.3的系统运行方式分为：<strong>带图形界面、可以用鼠标操作的图形化方式</strong>和<strong>不带图形界面、直接用命令行操作的文本方式</strong>（具体的系统运行方式，可以在系统安装的过程中自定义选择）</li>
</ol>
<blockquote>
<p>用系统安装盘成功引导之后，出现如下界面：</p>
</blockquote>
<p><img src="/2017/08/02/CentOS-6-3安装/QQ截图20170307223818.png" alt=""></p>
<ul>
<li>Install or upgrade an existing system [ 安装或升级现有的系统 ]</li>
<li>install system with basic video driver [ 安装过程中采用 基本的显卡驱动 ]</li>
<li>Rescue installed system [ 进入系统修复模式 ]</li>
<li>Boot from local drive [ 退出安装从硬盘启动 ]</li>
<li>Memory test [ 内存检测 ]</li>
</ul>
<blockquote>
<p>这里选择第一项，安装或升级现有的系统，回车。<br>出现是否对CD媒体进行测试的提问，这里选择“Skip”跳过测试。</p>
</blockquote>
<p><img src="/2017/08/02/CentOS-6-3安装/QQ截图20170307224402.png" alt=""></p>
<blockquote>
<p>在一路配置语言、键盘、时区设置之后，注意一下空间划分。</p>
</blockquote>
<p><img src="/2017/08/02/CentOS-6-3安装/QQ截图20170307224821.png" alt=""></p>
<blockquote>
<p>合理空间的划分关系到服务器性能和扩展，这里我选择<strong>创建自定义布局</strong>。</p>
</blockquote>
<p><strong>分区的注意事项</strong></p>
<ul>
<li>图形化安装注意内存大小（推荐1G及以上）</li>
<li>分区类型<ul>
<li><strong>主分区</strong>：最多<strong>4</strong>个，可以拿1个当做扩展分区。</li>
<li><strong>扩展分区</strong>：最多<strong>1</strong>个，只能用来包含逻辑分区，扩展分区加主分区最多4个。</li>
<li><strong>逻辑分区</strong>：分区数超过3个后（包括4个），自动出现在扩展分区里的描述分区。</li>
</ul>
</li>
<li>格式化（写入文件系统）<ul>
<li>Windows：<code>fat16</code> <code>fat32</code> <code>ntfs</code></li>
<li>Linux：<code>ext2</code> <code>ext3</code> <code>ext4</code></li>
<li>越新的文件系统，支持硬盘分区大小更大，单文件更大，读写速度更快，数据更安全</li>
</ul>
</li>
<li>Linux分区表示（设备名）<ul>
<li>/dev/hda1    hd:IDE硬盘 sd:SCSI,STAT硬盘 a:第一块硬盘 1：第一个分区</li>
<li>/dev/sda1 第一块SCSI硬盘第一个主分区</li>
<li>/dev/sdc5 第三块SCSI硬盘第一个逻辑分区</li>
</ul>
</li>
</ul>
<p><img src="/2017/08/02/CentOS-6-3安装/QQ截图20170307230049.png" alt=""></p>
<p><strong>硬件设备文件名</strong></p>
<table>
<thead>
<tr>
<th>硬件</th>
<th>设备文件名</th>
</tr>
</thead>
<tbody>
<tr>
<td>IDE硬盘</td>
<td>/dev/hd[a-d]</td>
</tr>
<tr>
<td>SCSI/SATA/USB硬盘</td>
<td>/dev/sd[a-p]</td>
</tr>
<tr>
<td>光驱</td>
<td>/dev/cdrom或/dev/sr0</td>
</tr>
<tr>
<td>软盘</td>
<td>/dev/fd[0-1]</td>
</tr>
<tr>
<td>打印机（25针）</td>
<td>/dev/lp[0-2]</td>
</tr>
<tr>
<td>打印机（USB）</td>
<td>/dev/usb/lp[0-15]</td>
</tr>
<tr>
<td>鼠标</td>
<td>/dev/mouse</td>
</tr>
</tbody>
</table>
<blockquote>
<p>以下是我的分区情况：</p>
</blockquote>
<p><img src="/2017/08/02/CentOS-6-3安装/QQ截图20170307233101.png" alt=""></p>
<p><strong>注意事项</strong></p>
<ul>
<li>必须分区<ul>
<li><code>/</code> 根分区必须单独分，越大越好。这里我选择了<strong>使用全部可用空间</strong></li>
<li><code>swap分区</code> 交换分区（虚拟内存），注意是在<strong>文件系统类型</strong>中选择，Linux内存2倍，不要大于2GB</li>
</ul>
</li>
<li>推荐分区<ul>
<li><code>/boot</code> 启动分区</li>
<li><code>/home</code> 家目录类似我的文档</li>
<li><code>/www</code> 网页程序空间</li>
</ul>
</li>
</ul>
<blockquote>
<p>分区完毕后选择 <strong>格式化</strong> -&gt; <strong>将修改写入磁盘</strong> -&gt; <strong>下一步</strong> 确认引导。</p>
</blockquote>
<p><img src="/2017/08/02/CentOS-6-3安装/QQ截图20170307233932.png" alt=""></p>
<p>默认是：<code>Minimal</code>(最小)<br>如果是初次学习，建议选择：<code>Desktop</code> (桌面版)<br>如果是用作正式服务器，建议选择：<code>Minimal</code>(最小)</p>
<ul>
<li><code>Desktop</code>：基本的桌面系统，包括常用的桌面软件，如文档查看工具。</li>
<li><code>Minimal Desktop</code>：基本的桌面系统，包含的软件更少。</li>
<li><code>Minimal</code>：基本的系统，不含有任何可选的软件包。</li>
<li><code>Basic Server</code>：安装的基本系统的平台支持，不包含桌面。</li>
<li><code>Database Server</code>：基本系统平台，加上MySQL和PostgreSQL数据库，无桌面。</li>
<li><code>Web Server</code>：基本系统平台，加上PHP，Web server，还有MySQL和PostgreSQL数据库的客户端，无桌面。</li>
<li><code>Virtual Host</code>：基本系统加虚拟平台。</li>
<li><code>Software Development Workstation</code>：包含软件包较多，基本系统，虚拟化平台，桌面环境，开发工具。</li>
</ul>
<blockquote>
<p>这里我选择<code>Basic Server</code>，安装Linux基本是用来构建服务器的，所以基本上选择<code>Basic Server</code>就OK了。如果有特殊要求可以选择<strong>自定义</strong>，没有的话就直接开始安装我们的<code>CentOS</code>啦！</p>
</blockquote>
<p><img src="/2017/08/02/CentOS-6-3安装/QQ截图20170307235008.png" alt=""></p>
<blockquote>
<p>大约十分钟左右就能安装完毕！装完后会让你<strong>重新引导</strong>。</p>
</blockquote>
<p><img src="/2017/08/02/CentOS-6-3安装/QQ截图20170307235704.png" alt=""></p>
<blockquote>
<p>重启后便可登录我们的用户，敬请探索Linux的世界！</p>
</blockquote>
<p><img src="/2017/08/02/CentOS-6-3安装/QQ截图20170307235933.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;附：&lt;a href=&quot;http://www.centoscn.com/CentosSoft/iso/2013/0720/370.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CentOS 6.3下载地址&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;

    
    </summary>
    
      <category term="Linux" scheme="http://note.mostclan.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>搭建Git服务器教程</title>
    <link href="http://note.mostclan.com/2017/08/02/%E6%90%AD%E5%BB%BAGit%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://note.mostclan.com/2017/08/02/搭建Git服务器教程/</id>
    <published>2017-08-02T14:54:39.000Z</published>
    <updated>2017-08-02T15:03:50.592Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>任务时间：5min ~ 10min</p>
</blockquote>
<p>Git 是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p>
<p>此实验以 CentOS 7.2 x64 的系统为环境，搭建 git 服务器。</p>
<h3 id="安装依赖库和编译工具"><a href="#安装依赖库和编译工具" class="headerlink" title="安装依赖库和编译工具"></a>安装依赖库和编译工具</h3><p>为了后续安装能正常进行，我们先来安装一些相关依赖库和编译工具</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</div></pre></td></tr></table></figure>
<p>安装编译工具</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install gcc perl-ExtUtils-MakeMaker</div></pre></td></tr></table></figure>
<h3 id="下载-git"><a href="#下载-git" class="headerlink" title="下载 git"></a>下载 git</h3><p>选一个目录，用来放下载下来的安装包，这里将安装包放在<em>/usr/local/src</em>目录里</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /usr/local/src</div></pre></td></tr></table></figure>
<p>到官网找一个新版稳定的源码包下载到<code>/usr/local/src</code>文件夹里</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://www.kernel.org/pub/software/scm/git/git-2.10.0.tar.gz</div></pre></td></tr></table></figure>
<h3 id="解压和编译"><a href="#解压和编译" class="headerlink" title="解压和编译"></a>解压和编译</h3><p>解压下载的源码包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zvxf git-2.10.0.tar.gz</div></pre></td></tr></table></figure>
<p>解压后进入 git-2.10.0 文件夹</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd git-2.10.0</div></pre></td></tr></table></figure>
<p>执行编译</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make all prefix=/usr/local/git</div></pre></td></tr></table></figure>
<p>编译完成后, 安装到 /usr/local/git 目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make install prefix=/usr/local/git</div></pre></td></tr></table></figure>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><blockquote>
<p>任务时间：5min ~ 10min</p>
</blockquote>
<h3 id="将-git-目录加入-PATH"><a href="#将-git-目录加入-PATH" class="headerlink" title="将 git 目录加入 PATH"></a>将 git 目录加入 PATH</h3><p>将原来的 PATH 指向目录修改为现在的目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &apos;export PATH=$PATH:/usr/local/git/bin&apos; &gt;&gt; /etc/bashrc</div></pre></td></tr></table></figure>
<p>生效环境变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/bashrc</div></pre></td></tr></table></figure>
<p>此时我们能查看 git 版本号，说明我们已经安装成功了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git --version</div></pre></td></tr></table></figure>
<h2 id="创建-git-账号密码"><a href="#创建-git-账号密码" class="headerlink" title="创建 git 账号密码"></a>创建 git 账号密码</h2><blockquote>
<p>任务时间：5min ~ 10min</p>
</blockquote>
<h3 id="创建-git-账号"><a href="#创建-git-账号" class="headerlink" title="创建 git 账号"></a>创建 git 账号</h3><p>为我们刚刚搭建好的 git 创建一个账号</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">useradd -m gituser</div></pre></td></tr></table></figure>
<p>然后为这个账号设置密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">passwd gituser</div></pre></td></tr></table></figure>
<blockquote>
<p>控制台输入创建密码后，输入您自定义的密码，并二次确认。</p>
</blockquote>
<h2 id="初始化-git-仓库并配置用户权限"><a href="#初始化-git-仓库并配置用户权限" class="headerlink" title="初始化 git 仓库并配置用户权限"></a>初始化 git 仓库并配置用户权限</h2><blockquote>
<p>任务时间：5min ~ 10min</p>
</blockquote>
<h3 id="创建-git-仓库并初始化"><a href="#创建-git-仓库并初始化" class="headerlink" title="创建 git 仓库并初始化"></a>创建 git 仓库并初始化</h3><p>我们创建<em>/data/repositories</em>目录用于存放 git 仓库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/repositories</div></pre></td></tr></table></figure>
<p>创建好后，初始化这个仓库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /data/repositories/ &amp;&amp; git init --bare test.git</div></pre></td></tr></table></figure>
<h3 id="配置用户权限"><a href="#配置用户权限" class="headerlink" title="配置用户权限"></a>配置用户权限</h3><p>给 git 仓库目录设置用户和用户组并设置权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R gituser:gituser /data/repositories</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 755 /data/repositories</div></pre></td></tr></table></figure>
<p>查找 git-shell 所在目录, 编辑<em>/etc/passwd</em>文件，将最后一行关于<code>gituser</code>的登录 shell 配置改为 git-shell 的目录如下</p>
<h5 id="示例代码：-etc-passwd"><a href="#示例代码：-etc-passwd" class="headerlink" title="示例代码：/etc/passwd"></a>示例代码：/etc/passwd</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gituser:x:500:500::/home/gituser:/usr/local/git/bin/git-shell</div></pre></td></tr></table></figure>
<blockquote>
<p>如果按照刚才的步骤执行, 这个位置应该是 /usr/local/git/bin/git-shell, 否则请通过<code>which git-shell</code>命令查看位置</p>
<p>安全目的, 限制 git 账号的 ssh 连接只能是登录 git-shell</p>
</blockquote>
<h3 id="使用搭建好的-Git-服务"><a href="#使用搭建好的-Git-服务" class="headerlink" title="使用搭建好的 Git 服务"></a>使用搭建好的 Git 服务</h3><p>克隆 test repo 到本地</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ~ &amp;&amp; git clone gituser@&lt;您的 CVM IP 地址&gt;:/data/repositories/test.git</div></pre></td></tr></table></figure>
<h3 id="实验完成"><a href="#实验完成" class="headerlink" title="实验完成"></a>实验完成</h3><p>恭喜，Git 服务器搭建完成, 从此以后你可以方便地将你的本地代码提交到 Git 服务器托管了</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;任务时间：5min ~ 10min&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Git 是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。&lt;/p&gt;
&lt;p&gt;此实验以 CentOS 7.2 x64 的系统为环境，搭建 git 服
    
    </summary>
    
      <category term="Git" scheme="http://note.mostclan.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://note.mostclan.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Git学习笔记</title>
    <link href="http://note.mostclan.com/2017/08/02/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://note.mostclan.com/2017/08/02/Git学习笔记/</id>
    <published>2017-08-02T14:39:13.000Z</published>
    <updated>2017-08-02T14:53:51.478Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-Git配置"><a href="#一-Git配置" class="headerlink" title="一.Git配置"></a>一.Git配置</h2><h3 id="1-全局设置名字和邮箱（用作提交commit时的签名）"><a href="#1-全局设置名字和邮箱（用作提交commit时的签名）" class="headerlink" title="1.全局设置名字和邮箱（用作提交commit时的签名）"></a>1.全局设置名字和邮箱（用作提交commit时的签名）</h3><blockquote>
<p>git config –global &lt;配置名称&gt; &lt;配置的值&gt;</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name &quot;Veris&quot;</div><div class="line">$ git config --global user.email &quot;562854011@qq.com&quot;</div></pre></td></tr></table></figure>
<blockquote>
<p>临时更改配置则不带–global选项，该操作会在当前项目下创建 .git/config，从而使用针对当前项目的配置</p>
</blockquote>
<h3 id="2-查看生成的配置文件（-gitconfig）"><a href="#2-查看生成的配置文件（-gitconfig）" class="headerlink" title="2.查看生成的配置文件（.gitconfig）"></a>2.查看生成的配置文件（.gitconfig）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ cat ~/.gitconfig</div><div class="line">[user]</div><div class="line">        email = 562854011@qq.com</div><div class="line">        name = Veris</div></pre></td></tr></table></figure>
<h2 id="二-获得一个Git仓库（新建-克隆，复制）"><a href="#二-获得一个Git仓库（新建-克隆，复制）" class="headerlink" title="二.获得一个Git仓库（新建/克隆，复制）"></a>二.获得一个Git仓库（新建/克隆，复制）</h2><h3 id="1-Clone一个仓库"><a href="#1-Clone一个仓库" class="headerlink" title="1.Clone一个仓库"></a>1.Clone一个仓库</h3><blockquote>
<p>Git能在许多协议下使用，所以Git URL可能以ssh://, http(s)://, git://. 有些仓库可以通过不只一种协议来访问。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone http://git.shiyanlou.com/shiyanlou/gitproject</div></pre></td></tr></table></figure>
<blockquote>
<p>clone操作完成后，会发现当前目录下多了一个gitproject文件夹，这个文件夹里的内容就是我们刚刚clone下来的代码。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cd gitproject/</div><div class="line">(master)$ ls </div><div class="line">README.md</div></pre></td></tr></table></figure>
<blockquote>
<p>由于实验楼的Linux使用的是zsh Shell，zsh会判断当前的目录是否有Git仓库，如果是的话则自动把目前所在的git分支显示在提示符中。</p>
</blockquote>
<h3 id="2-初始化一个新的仓库"><a href="#2-初始化一个新的仓库" class="headerlink" title="2.初始化一个新的仓库"></a>2.初始化一个新的仓库</h3><blockquote>
<p>可以对一个已存在的文件夹用下面的命令让它置于Git的版本控制管理之下。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ cd /home/shiyanlou/</div><div class="line">$ mkdir project</div><div class="line">$ cd project</div><div class="line">$ git init</div></pre></td></tr></table></figure>
<blockquote>
<p>Git会输出Initialized empty Git repository in /home/shiyanlou/project/.git/</p>
<p>通过ls -la命令会发现project目录下会有一个名叫.git 的目录被创建，这意味着一个仓库被初始化了。可以进入到.git目录查看下有哪些内容。</p>
</blockquote>
<h2 id="三-正常的工作流程"><a href="#三-正常的工作流程" class="headerlink" title="三.正常的工作流程"></a>三.正常的工作流程</h2><p><strong>git的基本流程如下：</strong></p>
<ol>
<li>创建或修改文件</li>
<li>使用<code>git add</code>命令添加新创建或修改的文件到本地的缓存区（Index）</li>
<li>使用<code>git commit</code>命令提交到本地代码库</li>
<li>（可选，有的时候并没有可以同步的远端代码库）使用<code>git push</code>命令将本地代码库同步到远端代码库</li>
<li></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-Git配置&quot;&gt;&lt;a href=&quot;#一-Git配置&quot; class=&quot;headerlink&quot; title=&quot;一.Git配置&quot;&gt;&lt;/a&gt;一.Git配置&lt;/h2&gt;&lt;h3 id=&quot;1-全局设置名字和邮箱（用作提交commit时的签名）&quot;&gt;&lt;a href=&quot;#1-全局设置
    
    </summary>
    
      <category term="Git" scheme="http://note.mostclan.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://note.mostclan.com/tags/Git/"/>
    
  </entry>
  
</feed>
